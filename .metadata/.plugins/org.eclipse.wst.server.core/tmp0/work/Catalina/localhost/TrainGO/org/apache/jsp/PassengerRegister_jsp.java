/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-10-15 18:10:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class PassengerRegister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	if(session.getAttribute("username")!=null){
		response.sendRedirect("Homepage.jsp");
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>Registration</title>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"CSS/PassengerRegister.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("  <section>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <div class=\"image-bar\">\r\n");
      out.write("        <img src=\"02.jpeg\" alt=\"Image Bar\" >\r\n");
      out.write("      </div>\r\n");
      out.write("      <form class=\"form1\" action=\"insertPassenger\">\r\n");
      out.write("        <h1>Create Account</h1>\r\n");
      out.write("        <div class=\"content\">\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <label for=\"Name\">First Name</label>\r\n");
      out.write("                <input type=\"text\" placeholder=\"Enter first name\" name=\"fname\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <label for=\"Name\">Last Name</label>\r\n");
      out.write("                <input type=\"text\" placeholder=\"Enter last name\" name=\"lname\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <label for=\"Username\">Username</label>\r\n");
      out.write("                <input type=\"text\" placeholder=\"Enter Username name\" name=\"username\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <label for=\"email\">Email</label>\r\n");
      out.write("                <input type=\"email\" placeholder=\"Enter your valid email address name\" name=\"email\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("           <div class=\"input-box\">\r\n");
      out.write("                <label for=\"phonenumber\">Phone Number</label>\r\n");
      out.write("                <input type=\"tel\" placeholder=\"Enter phone number\" name=\"phonenumber\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <label for=\"address\">Address</label>\r\n");
      out.write("                <input type=\"text\" placeholder=\"Enter your address\" name=\"address\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <label for=\"Password\">Password</label>\r\n");
      out.write("                <div class=\"password-container\">\r\n");
      out.write("                  <input type=\"password\" placeholder=\"Enter new Password\" id=\"password\" name=\"Password\" required>\r\n");
      out.write("                  <img src=\"eye-close.png\" id=\"togglePassword1\" class=\"toggle-icon\">\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("    \r\n");
      out.write("              <div class=\"input-box\">\r\n");
      out.write("                <label for=\"Confirm Password\">Confirm Password</label>\r\n");
      out.write("                <div class=\"password-container\">\r\n");
      out.write("                  <input type=\"password\" placeholder=\"Re-Enter password\" id=\"confirmPassword\" name=\"ConfirmPassword\" required>\r\n");
      out.write("                  <img src=\"eye-close.png\" id=\"togglePassword2\" class=\"toggle-icon\">\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"alert\">\r\n");
      out.write("            <input type=\"checkbox\" required>\r\n");
      out.write("            <label>Creating your account and you accepting <a href=\"\"> Terms & Condition</a></label><br><br>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"button-container\">\r\n");
      out.write("            <button type=\"submit\">Create Account</button> <br><br>\r\n");
      out.write("            <b>Already have an account <a href=\"Login.jsp\">Sign in</a></b><br><br>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("  </section>\r\n");
      out.write("  <script src=\"togglePassword.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
