/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-10-15 19:32:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class Userprofile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1728799185724L));
    _jspx_dependants.put("jar:file:/D:/2%20nd%20year/1%20st%20semester/MY/Assignment/OOP/sep%20servlet%20-%20Copyvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/TrainGO/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664433678000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>User Profile</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"CSS/updateprofile.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<section>\r\n");
      out.write(" ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  </section>\r\n");
      out.write("<script>\r\n");
      out.write("document.getElementById('togglePassword1').addEventListener('click', function () {\r\n");
      out.write("    const passwordField = document.getElementById('password');\r\n");
      out.write("    const icon = document.getElementById('togglePassword1');\r\n");
      out.write("    // Toggle password visibility\r\n");
      out.write("    if (passwordField.type === 'password') {\r\n");
      out.write("        passwordField.type = 'text';\r\n");
      out.write("        icon.src = 'eye-open.png';\r\n");
      out.write("    } else {\r\n");
      out.write("        passwordField.type = 'password';\r\n");
      out.write("        icon.src = 'eye-close.png';\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("document.getElementById('togglePassword2').addEventListener('click', function () {\r\n");
      out.write("    const confirmPasswordField = document.getElementById('confirmPassword');\r\n");
      out.write("    const icon = document.getElementById('togglePassword2');\r\n");
      out.write("    // Toggle confirm password visibility\r\n");
      out.write("    if (confirmPasswordField.type === 'password') {\r\n");
      out.write("        confirmPasswordField.type = 'text';\r\n");
      out.write("        icon.src = 'eye-open.png';\r\n");
      out.write("    } else {\r\n");
      out.write("        confirmPasswordField.type = 'password';\r\n");
      out.write("        icon.src = 'eye-close.png';\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function checkPassword() { \r\n");
      out.write("	let password = document.getElementById(\"password\").value;\r\n");
      out.write("	let cnfrmPassword = document.getElementById(\"cnfrm-password\").value;\r\n");
      out.write("	let message = document.getElementById(\"message\");\r\n");
      out.write("	console.log(\" Password:\", password, '\\n', \"Confirm Password:\",cnfrmPassword);\r\n");
      out.write("	\r\n");
      out.write("	if(password.length != 0){\r\n");
      out.write("		if (password = cnfrmPassword) {\r\n");
      out.write("			message.textContent = \"Wow, Passwords match\";\r\n");
      out.write("			message.style.backgroundColor = \"#1dcd59\";\r\n");
      out.write("		}\r\n");
      out.write("		else{\r\n");
      out.write("			message.textContent = \"Sorry, Password don't match\";\r\n");
      out.write("			message.style.backgroundColor = \"#ff4d4d\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	else{\r\n");
      out.write("	alert(\"Password can't be empty!\");\r\n");
      out.write("	message.textContent = \"\";\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /Userprofile.jsp(17,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("ppss");
      // /Userprofile.jsp(17,1) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/Userprofile.jsp(17,1) '${ppss }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${ppss }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("    <div class=\"container\">\r\n");
            out.write("      <div class=\"image-bar\">\r\n");
            out.write("        <div class=\"button-container\">\r\n");
            out.write("           <a href=\"Userprofile.jsp\"> <button type=\"submit\">Profile</button></a>\r\n");
            out.write("           <button type=\"button\" onclick=\"location.href='pupdate?id=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'\">Update Profile</button>\r\n");
            out.write("           <button type=\"submit\"><a href=\"AfterHomepage.jsp\">Home</a></button> \r\n");
            out.write("\r\n");
            out.write("            \r\n");
            out.write("        </div>\r\n");
            out.write("      </div>\r\n");
            out.write("      \r\n");
            out.write("  \r\n");
            out.write("       <form class=\"form1\"  action=\"\">\r\n");
            out.write("        <h1>Profile Information</h1>\r\n");
            out.write("        <div class=\"content\">\r\n");
            out.write("        \r\n");
            out.write("        	<div class=\"input-box\">\r\n");
            out.write("                <label for=\"UserID\">User ID</label>\r\n");
            out.write("                <input type=\"text\" placeholder=\"Enter User ID\" name=\"userID\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("            </div>\r\n");
            out.write("            <div class=\"input-box\">\r\n");
            out.write("                <label for=\"firstName\">First Name</label>\r\n");
            out.write("                <input type=\"text\" placeholder=\"Enter first name\" name=\"fname\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.fname}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("            </div>\r\n");
            out.write("            <div class=\"input-box\">\r\n");
            out.write("                <label for=\"lastName\">Last Name</label>\r\n");
            out.write("                <input type=\"text\" placeholder=\"Enter last name\" name=\"lname\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.lname}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("            </div>\r\n");
            out.write("            <div class=\"input-box\">\r\n");
            out.write("                <label for=\"username\">Username</label>\r\n");
            out.write("                <input type=\"text\" placeholder=\"Enter username\" name=\"username\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.username}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("            </div>\r\n");
            out.write("            \r\n");
            out.write("            <div class=\"input-box\">\r\n");
            out.write("                <label for=\"email\">Email</label>\r\n");
            out.write("                <input type=\"email\" placeholder=\"Enter your valid email address\" name=\"email\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.email}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("            </div>\r\n");
            out.write("           <div class=\"input-box\">\r\n");
            out.write("                <label for=\"phonenumber\">Phone Number</label>\r\n");
            out.write("                <input type=\"tel\" placeholder=\"Enter phone number\" name=\"phonenumber\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.phoneNumber}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("            </div>\r\n");
            out.write("            <div class=\"input-box\">\r\n");
            out.write("                <label for=\"address\">Address</label>\r\n");
            out.write("                <input type=\"text\" placeholder=\"Enter your address\" name=\"address\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.address}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("            </div>\r\n");
            out.write("            <div class=\"input-box\">\r\n");
            out.write("                <label for=\"Password\">Password</label>\r\n");
            out.write("                <div class=\"password-container\">\r\n");
            out.write("                  <input type=\"password\" placeholder=\"Enter new Password\" id=\"password\" name=\"password\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ppss.password}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" readonly>\r\n");
            out.write("                  <img src=\"eye-close.png\" id=\"togglePassword1\" class=\"toggle-icon\">\r\n");
            out.write("                </div>\r\n");
            out.write("              </div>\r\n");
            out.write("        </div>\r\n");
            out.write("      </form>\r\n");
            out.write("\r\n");
            out.write(" </div>\r\n");
            out.write("  ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
